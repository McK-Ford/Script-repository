H4K20me3NEG_lst[[i]] = H4K20me3NEG_lst[[i]] |>
filter(H4K20me3NEG_lst[[i]][[7]] == 0)
print(
paste0(
"Length of NEG ",
names(H4K20me3NEG_lst)[[i]],
" is: ",
dim(H4K20me3NEG_lst[[i]])[1]
)
)
}
head(H4K20me3POS_lst[[1]])
head(H4K20me3NEG_lst[[1]])
H4K20me3POS_lst <- list(MB231_merge = MB231_merge,
MCF7_merge = MCF7_merge,
SUM159_merge = SUM159_merge,
T47D_merge = T47D_merge,
MB231_abcam = MB231_abcam,
MCF7_abcam = MCF7_abcam,
SUM159_abcam = SUM159_abcam,
T47D_abcam = T47D_abcam,
MB231_cell = MB231_cell,
MCF7_cell = MCF7_cell,
SUM159_cell = SUM159_cell,
T47D_cell = T47D_cell)
H4K20me3NEG_lst <- H4K20me3POS_lst
for (i in seq_along(H4K20me3POS_lst)) {
colnames(H4K20me3POS_lst[[i]]) = c("chrom", "start", "end", "symbol", "pI", "strand", "score")
annotLookup = getBM(
mart = mart,
attributes = c(
"hgnc_symbol",
"gene_biotype"),
filter = "hgnc_symbol",
values = H4K20me3POS_lst[[i]]$symbol,
uniqueRows=TRUE)
H4K20me3POS_lst[[i]] <- merge(H4K20me3POS_lst[[i]], annotLookup, by.x = "symbol",
by.y = "hgnc_symbol", all = TRUE)
H4K20me3POS_lst[[i]] = H4K20me3POS_lst[[i]] |>
filter(H4K20me3POS_lst[[i]][[7]] > 0 & H4K20me3POS_lst[[i]][[7]] == "protein_coding")
print(
paste0(
"Length of POS ",
names(H4K20me3POS_lst)[[i]],
" is: ",
dim(H4K20me3POS_lst[[i]])[1]
)
)
colnames(H4K20me3NEG_lst[[i]]) = c("chrom", "start", "end", "symbol", "pI", "strand", "score")
H4K20me3NEG_lst[[i]] <- merge(H4K20me3NEG_lst[[i]], annotLookup, by.x = "symbol",
by.y = "hgnc_symbol", all = TRUE)
H4K20me3NEG_lst[[i]] = H4K20me3NEG_lst[[i]] |>
filter(H4K20me3NEG_lst[[i]][[7]] == 0 & H4K20me3POS_lst[[i]][[7]] == "protein_coding")
print(
paste0(
"Length of NEG ",
names(H4K20me3NEG_lst)[[i]],
" is: ",
dim(H4K20me3NEG_lst[[i]])[1]
)
)
}
H4K20me3POS_lst <- list(MB231_merge = MB231_merge,
MCF7_merge = MCF7_merge,
SUM159_merge = SUM159_merge,
T47D_merge = T47D_merge,
MB231_abcam = MB231_abcam,
MCF7_abcam = MCF7_abcam,
SUM159_abcam = SUM159_abcam,
T47D_abcam = T47D_abcam,
MB231_cell = MB231_cell,
MCF7_cell = MCF7_cell,
SUM159_cell = SUM159_cell,
T47D_cell = T47D_cell)
H4K20me3NEG_lst <- H4K20me3POS_lst
for (i in seq_along(H4K20me3POS_lst)) {
colnames(H4K20me3POS_lst[[i]]) = c("chrom", "start", "end", "symbol", "pI", "strand", "score")
annotLookup = getBM(
mart = mart,
attributes = c(
"hgnc_symbol",
"gene_biotype"),
filter = "hgnc_symbol",
values = H4K20me3POS_lst[[i]]$symbol,
uniqueRows=TRUE)
H4K20me3POS_lst[[i]] <- merge(H4K20me3POS_lst[[i]], annotLookup, by.x = "symbol",
by.y = "hgnc_symbol", all = TRUE)
H4K20me3POS_lst[[i]] = H4K20me3POS_lst[[i]] |>
filter(H4K20me3POS_lst[[i]][[7]] > 0 & H4K20me3POS_lst[[i]][[8]] == "protein_coding")
print(
paste0(
"Length of POS ",
names(H4K20me3POS_lst)[[i]],
" is: ",
dim(H4K20me3POS_lst[[i]])[1]
)
)
colnames(H4K20me3NEG_lst[[i]]) = c("chrom", "start", "end", "symbol", "pI", "strand", "score")
H4K20me3NEG_lst[[i]] <- merge(H4K20me3NEG_lst[[i]], annotLookup, by.x = "symbol",
by.y = "hgnc_symbol", all = TRUE)
H4K20me3NEG_lst[[i]] = H4K20me3NEG_lst[[i]] |>
filter(H4K20me3NEG_lst[[i]][[7]] == 0 & H4K20me3POS_lst[[i]][[8]] == "protein_coding")
print(
paste0(
"Length of NEG ",
names(H4K20me3NEG_lst)[[i]],
" is: ",
dim(H4K20me3NEG_lst[[i]])[1]
)
)
}
H4K20me3POS_lst <- list(MB231_merge = MB231_merge,
MCF7_merge = MCF7_merge,
SUM159_merge = SUM159_merge,
T47D_merge = T47D_merge,
MB231_abcam = MB231_abcam,
MCF7_abcam = MCF7_abcam,
SUM159_abcam = SUM159_abcam,
T47D_abcam = T47D_abcam,
MB231_cell = MB231_cell,
MCF7_cell = MCF7_cell,
SUM159_cell = SUM159_cell,
T47D_cell = T47D_cell)
H4K20me3NEG_lst <- H4K20me3POS_lst
for (i in seq_along(H4K20me3POS_lst)) {
colnames(H4K20me3POS_lst[[i]]) = c("chrom", "start", "end", "symbol", "pI", "strand", "score")
annotLookup = getBM(
mart = mart,
attributes = c(
"hgnc_symbol",
"gene_biotype"),
filter = "hgnc_symbol",
values = H4K20me3POS_lst[[i]]$symbol,
uniqueRows=TRUE)
H4K20me3POS_lst[[i]] <- merge(H4K20me3POS_lst[[i]], annotLookup, by.x = "symbol",
by.y = "hgnc_symbol", all = TRUE)
H4K20me3POS_lst[[i]] = H4K20me3POS_lst[[i]] |>
filter(H4K20me3POS_lst[[i]][[7]] > 0 & H4K20me3POS_lst[[i]][[8]] == "protein_coding")
print(
paste0(
"Length of POS ",
names(H4K20me3POS_lst)[[i]],
" is: ",
dim(H4K20me3POS_lst[[i]])[1]
)
)
colnames(H4K20me3NEG_lst[[i]]) = c("chrom", "start", "end", "symbol", "pI", "strand", "score")
H4K20me3NEG_lst[[i]] <- merge(H4K20me3NEG_lst[[i]], annotLookup, by.x = "symbol",
by.y = "hgnc_symbol", all = TRUE)
H4K20me3NEG_lst[[i]] = H4K20me3NEG_lst[[i]] |>
filter(H4K20me3NEG_lst[[i]][[7]] == 0 & H4K20me3NEG_lst[[i]][[8]] == "protein_coding")
print(
paste0(
"Length of NEG ",
names(H4K20me3NEG_lst)[[i]],
" is: ",
dim(H4K20me3NEG_lst[[i]])[1]
)
)
}
mytheme = theme(
panel.background=element_blank(),
text=element_text(color="black",face="bold",family="sans"),
axis.text=element_text(color="black"),
axis.ticks=element_line(color="black"),
plot.margin=unit(c(0.25, 0.25, .25, 0.25),"cm"),
plot.title=element_text(vjust=2, hjust=0.5),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.title.y=element_text(vjust=0),
axis.title.x=element_text(vjust=0),
panel.border = element_blank(),
axis.line=element_line()
)
mytheme = theme(
panel.background=element_blank(),
text=element_text(color="black",face="bold",family="sans"),
axis.text=element_text(color="black"),
axis.ticks=element_line(color="black"),
plot.margin=unit(c(0.25, 0.25, .25, 0.25),"cm"),
plot.title=element_text(vjust=2, hjust=0.5),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.title.y=element_text(vjust=0),
axis.title.x=element_text(vjust=0),
panel.border = element_blank(),
axis.line=element_line()
)
colors <- c("H4K20me3 Positive" = "blue", "H4K20me3 Negative" = "red")
test = wilcox.test(x = H4K20me3POS_lst[[1]]$pI, y = H4K20me3NEG_lst[[1]]$pI, paired = FALSE,
conf.int = TRUE, correct = FALSE)
tast
test
test[1]
test[[2]]
test[2
]
head(test)
H4K20me3pval_lst <- H4K20me3POS_lst
for (i in seq_along(H4K20me3POS_lst)) {
test = wilcox.test(x = H4K20me3POS_lst[[i]]$pI, y = H4K20me3NEG_lst[[i]]$pI, paired = FALSE,
conf.int = TRUE, correct = FALSE)
H4K20me3pval_lst[[i]] = test$p.value
}
H4K20me3pval_lst <- H4K20me3POS_lst
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
pdf(file = "with_without_H4K20me3.pdf", width = 7)
for (i in seq_along(H4K20me3POS_lst)) {
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", H4K20me3pval_lst[[i]]))
gplot
}
dev.off()
H4K20me3pval_lst <- H4K20me3POS_lst
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", H4K20me3pval_lst[[i]]))
gplot[[i]] = gplot
}
gplot[[1]]
gplot[1]
gplot[4]
gplot[10]
gplot[[[10]]]
gplot[[10]]
H4K20me3pval_lst <- H4K20me3POS_lst
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
message(i)
gplot[[i]] <- local({
i <- i
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", H4K20me3pval_lst[[i]]))
print(gplot)
})
}
H4K20me3pval_lst[[1]]
test$p.value
H4K20me3pval_lst <- list(1:12)
for (i in seq_along(H4K20me3POS_lst)) {
test = wilcox.test(x = H4K20me3POS_lst[[i]]$pI, y = H4K20me3NEG_lst[[i]]$pI, paired = FALSE,
conf.int = TRUE, correct = FALSE)
H4K20me3pval_lst[[i]] = test$p.value
}
H4K20me3pval_lst[[1]]
H4K20me3pval_lst <- H4K20me3POS_lst
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
message(i)
gplot[[i]] <- local({
i <- i
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", H4K20me3pval_lst[[i]]))
print(gplot)
})
}
H4K20me3pval_lst[1]
H4K20me3pval_lst[[1]]
H4K20me3pval_lst <- list(1:12)
for (i in seq_along(H4K20me3POS_lst)) {
test = wilcox.test(x = H4K20me3POS_lst[[i]]$pI, y = H4K20me3NEG_lst[[i]]$pI, paired = FALSE,
conf.int = TRUE, correct = FALSE)
H4K20me3pval_lst[[i]] = test$p.value
}
H4K20me3pval_lst[[i]] = test$p.value
H4K20me3pval_lst[[1]]
H4K20me3pval_lst[1]
H4K20me3pval_lst[2]
H4K20me3pval_lst[12]
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
message(i)
gplot[[i]] <- local({
i <- i
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", H4K20me3pval_lst[[i]]))
print(gplot)
})
}
?trunc
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
message(i)
gplot[[i]] <- local({
i <- i
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", round(H4K20me3pval_lst[[i]], digits = 4)))
print(gplot)
})
}
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
message(i)
gplot[[i]] <- local({
i <- i
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", round(H4K20me3pval_lst[[i]], signif = 4)))
print(gplot)
})
}
title_list <- list("MB231 (Merged Antibodies)",
"MCF7 (Merged Antibodies)",
"SUM159 (Merged Antibodies)",
"T47D (Merged Antibodies)",
"MB231 (Abcam)",
"MCF7 (Abcam)",
"SUM159 (Abcam)",
"T47D (Abcam)",
"MB231 (Cell Signalling)",
"MCF7 (Cell Signalling)",
"SUM159 (Cell Signalling)",
"T47D (Cell Signalling)")
gplotlist = title_list
for (i in seq_along(H4K20me3POS_lst)) {
message(i)
gplot[[i]] <- local({
i <- i
gplot <- ggplot() +
stat_ecdf(geom="step", data = H4K20me3POS_lst[[i]], aes(pI, color = "H4K20me3 Positive")) +
stat_ecdf(geom="step", data = H4K20me3NEG_lst[[i]], aes(pI, color = "H4K20me3 Negative")) +
mytheme +
scale_x_log10(n.breaks=6, labels=scales::label_comma()) +
ylab("Cumulative Distribution") +
ggtitle(title_list[[i]]) +
scale_color_manual(values = colors) +
theme(legend.position = c(0.2, 0.8),
legend.key = element_blank(),
legend.title = element_blank()) +
annotate("text", x = 0.8, y = 0.2, label = paste0("p=", signif(H4K20me3pval_lst[[i]], digits = 4)))
print(gplot)
})
}
pdf(file = "cdf.pdf", width = 15)
for (i in seq_along(H4K20me3POS_lst)) {gplot[[i]]}
dev.off()
gplot[[i]]
gplot[[1]]
gplot[[2]]
gplotlist[[i]]
pdf(file = "cdf.pdf", width = 7)
for (i in seq_along(gplot)) {gplot[[i]]}
dev.off()
pdf(file = "cdf.pdf", width = 7)
for (i in seq_along(gplot)) {gplot[[i]]}
dev.off()
pdf(file = "cdf.pdf", width = 7)
for (i in seq_along(gplot)) {print(gplot[[i]])}
dev.off()
protein_coding_peppro_withrankdif <- read.delim("C:/Users/kayle/Box/Vertinolab/McKayla Ford/Data/NascentSeq/Vertino Lab/project cell lines/protein_coding_peppro_withrankdif.txt")
View(protein_coding_peppro_withrankdif)
fc_chart = protein_coding_peppro_withrankdif[1:8]
View(fc_chart)
fc_chart$MCF7overMB231 = log2(pI_MCF7/pI_MB231)
fc_chart$MCF7overMB231 = log2(fc_chart$pI_MCF7/fc_chart$pI_MB231)
fc_chart$MCF7overSUM159 = log2(fc_chart$pI_MCF7/fc_chart$pI_SUM159)
fc_chart$T47DoverMB231 = log2(fc_chart$pI_T47D/fc_chart$pI_MB231)
fc_chart$T47DoverSUM159 = log2(fc_chart$pI_T47D/fc_chart$pI_SUM159)
write.table(fc_chart, file="peppro_w_log2fc.txt", quote=FALSE, sep="\t", row.names = FALSE)
